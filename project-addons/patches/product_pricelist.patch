Index: addons/product/models/product_pricelist.py
diff --git a/addons/product/models/product_pricelist.py b/addons/product/models/product_pricelist.py
--- a/addons/product/models/product_pricelist.py	(revision 700f30ab649eaf2b6c3f83adb405dc28704a2f83)
+++ b/addons/product/models/product_pricelist.py	(date 1674471961336)
@@ -95,6 +95,31 @@
                 results[product_id][pricelist.id] = price
         return results
 
+    def _compute_price_rule_get_items(self, products_qty_partner, date, uom_id, prod_tmpl_ids, prod_ids, categ_ids):
+        # Load all rules
+        self.ensure_one()
+        self.env.cr.execute(
+            """
+            SELECT
+                item.id
+            FROM
+                product_pricelist_item AS item
+            LEFT JOIN product_category AS categ ON item.categ_id = categ.id
+            WHERE
+                (item.product_tmpl_id IS NULL OR item.product_tmpl_id = any(%s))
+                AND (item.product_id IS NULL OR item.product_id = any(%s))
+                AND (item.categ_id IS NULL OR item.categ_id = any(%s))
+                AND (item.pricelist_id = %s)
+                AND (item.date_start IS NULL OR item.date_start<=%s)
+                AND (item.date_end IS NULL OR item.date_end>=%s)
+            ORDER BY
+                item.applied_on, item.min_quantity desc, categ.parent_left desc
+            """,
+            (prod_tmpl_ids, prod_ids, categ_ids, self.id, date, date))
+
+        item_ids = [x[0] for x in self.env.cr.fetchall()]
+        return self.env['product.pricelist.item'].browse(item_ids)
+
     @api.multi
     def _compute_price_rule(self, products_qty_partner, date=False, uom_id=False):
         """ Low-level method - Mono pricelist, multi products
@@ -139,23 +164,8 @@
             prod_ids = [product.id for product in products]
             prod_tmpl_ids = [product.product_tmpl_id.id for product in products]
 
-        # Load all rules
-        self._cr.execute(
-            'SELECT item.id '
-            'FROM product_pricelist_item AS item '
-            'LEFT JOIN product_category AS categ '
-            'ON item.categ_id = categ.id '
-            'WHERE (item.product_tmpl_id IS NULL OR item.product_tmpl_id = any(%s))'
-            'AND (item.product_id IS NULL OR item.product_id = any(%s))'
-            'AND (item.categ_id IS NULL OR item.categ_id = any(%s)) '
-            'AND (item.pricelist_id = %s) '
-            'AND (item.date_start IS NULL OR item.date_start<=%s) '
-            'AND (item.date_end IS NULL OR item.date_end>=%s)'
-            'ORDER BY item.applied_on, item.min_quantity desc, categ.parent_left desc',
-            (prod_tmpl_ids, prod_ids, categ_ids, self.id, date, date))
-
-        item_ids = [x[0] for x in self._cr.fetchall()]
-        items = self.env['product.pricelist.item'].browse(item_ids)
+        items = self._compute_price_rule_get_items(products_qty_partner, date, uom_id, prod_tmpl_ids, prod_ids,
+                                                   categ_ids)
         results = {}
         for product, qty, partner in products_qty_partner:
             results[product.id] = 0.0
